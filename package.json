{
  "name": "super-truck-backend",
  "version": "0.1.0",
  "description": "",
  "author": {
    "name": "supertruck developer",
    "email": "supertruck@gmail.com"
  },
  "private": true,
  "license": "MIT",
  "scripts": {
    "build": "nest build",
    "format": "prettier --check \"src/**/*.ts\" \"test/**/*.ts\"",
    "format:write": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --no-error-on-unmatched-pattern",
    "lint:fix": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix --no-error-on-unmatched-pattern",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "npm run migration && node dist/main",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "prepare": "husky install",
    "typeorm": "ts-node --files -r tsconfig-paths/register ./node_modules/typeorm/cli.js --dataSource src/database/data-source.ts",
    "migration": "pnpm run typeorm migration:run",
    "make:migration": "npx typeorm migration:create ./src/database/migrations/$NAME",
    "migration:generate": "pnpm run typeorm migration:generate  ./src/database/migrations/$NAME",
    "migration:rollback": "pnpm run typeorm migration:revert",
    "db:seed": "ts-node --files -r tsconfig-paths/register ./node_modules/typeorm-extension/dist/cli/index.js seed",
    "docker": "docker run -d --name mysql-container -e MYSQL_ROOT_USER=root -e MYSQL_ROOT_PASSWORD=root -p 3306:3306 mysql",
    "er": "ts-node ./node_modules/.bin/typeorm-uml --dataSource src/database/data-source.ts --format=svg --with-table-names-only"
  },
  "dependencies": {
    "@nestjs-modules/mailer": "^1.8.1",
    "@nestjs/axios": "^2.0.0",
    "@nestjs/common": "^9.0.0",
    "@nestjs/config": "^2.3.0",
    "@nestjs/core": "^9.0.0",
    "@nestjs/event-emitter": "^1.4.1",
    "@nestjs/jwt": "^10.0.1",
    "@nestjs/mapped-types": "^1.2.0",
    "@nestjs/passport": "^9.0.1",
    "@nestjs/platform-express": "^9.3.1",
    "@nestjs/serve-static": "^3.0.1",
    "@nestjs/swagger": "^6.1.4",
    "@nestjs/typeorm": "^9.0.1",
    "argon2": "^0.30.3",
    "axios": "^1.3.1",
    "bcrypt": "^5.1.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "cookie-parser": "^1.4.6",
    "csv": "^6.2.12",
    "dayjs": "^1.11.10",
    "dotenv": "^16.0.3",
    "firebase": "^10.12.2",
    "firebase-admin": "^12.1.1",
    "handlebars": "^4.7.7",
    "helmet": "^6.0.1",
    "json-2-csv": "^4.0.0",
    "multer": "1.4.5-lts.1",
    "mysql2": "^3.2.0",
    "nestjs-i18n": "^10.2.6",
    "nestjs-pino": "^3.1.2",
    "nodemailer": "^6.9.1",
    "passport": "^0.6.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "pino-http": "^8.3.2",
    "pino-pretty": "^9.1.1",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.2.0",
    "typeorm": "^0.3.15",
    "typeorm-extension": "^2.7.0",
    "uuid": "^10.0.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^9.0.0",
    "@nestjs/schematics": "^9.0.0",
    "@nestjs/testing": "^9.0.0",
    "@types/express": "^4.17.13",
    "@types/jest": "^29.4.0",
    "@types/multer": "^1.4.7",
    "@types/node": "18.11.18",
    "@types/passport-jwt": "^3.0.8",
    "@types/passport-local": "^1.0.35",
    "@types/supertest": "^2.0.11",
    "@typescript-eslint/eslint-plugin": "^5.0.0",
    "@typescript-eslint/parser": "^5.0.0",
    "eslint": "^8.0.1",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^4.0.0",
    "husky": "^8.0.0",
    "jest": "^29.4.1",
    "lint-staged": "^13.1.2",
    "prettier": "^2.3.2",
    "source-map-support": "^0.5.20",
    "supertest": "^6.1.3",
    "ts-jest": "^29.0.5",
    "ts-loader": "^9.2.3",
    "ts-node": "^10.0.0",
    "tsconfig-paths": "^4.1.2",
    "typescript": "^4.7.4"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
